//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web_cafe_film.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WebsiteFilmEntities : DbContext
    {
        public WebsiteFilmEntities()
            : base("name=WebsiteFilmEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<DetailMovie> DetailMovie { get; set; }
        public virtual DbSet<DoanhThu> DoanhThu { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Movie> Movie { get; set; }
        public virtual DbSet<MovieSuggest> MovieSuggest { get; set; }
        public virtual DbSet<MovieUser> MovieUser { get; set; }
        public virtual DbSet<Occupation> Occupation { get; set; }
        public virtual DbSet<RatingOfMovie> RatingOfMovie { get; set; }
        public virtual DbSet<ThanhVien> ThanhVien { get; set; }
        public virtual DbSet<PhimChuaKiemDuyet> PhimChuaKiemDuyet { get; set; }
    
        public virtual ObjectResult<Nullable<bool>> prd_AccountLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("prd_AccountLogin", usernameParameter, passwordParameter);
        }
    
        public virtual int prd_Bang1_Update(Nullable<int> a, Nullable<int> b, Nullable<int> c, Nullable<int> d, Nullable<int> e)
        {
            var aParameter = a.HasValue ?
                new ObjectParameter("A", a) :
                new ObjectParameter("A", typeof(int));
    
            var bParameter = b.HasValue ?
                new ObjectParameter("B", b) :
                new ObjectParameter("B", typeof(int));
    
            var cParameter = c.HasValue ?
                new ObjectParameter("C", c) :
                new ObjectParameter("C", typeof(int));
    
            var dParameter = d.HasValue ?
                new ObjectParameter("D", d) :
                new ObjectParameter("D", typeof(int));
    
            var eParameter = e.HasValue ?
                new ObjectParameter("E", e) :
                new ObjectParameter("E", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prd_Bang1_Update", aParameter, bParameter, cParameter, dParameter, eParameter);
        }
    
        public virtual int prd_Movie_Insert(Nullable<int> movieID, string movieName, string uRLDetail, string linkImage, string director, string writer, string stars, string descriptions, string releaseDate, string runningTime, Nullable<int> categoryID, string @new)
        {
            var movieIDParameter = movieID.HasValue ?
                new ObjectParameter("MovieID", movieID) :
                new ObjectParameter("MovieID", typeof(int));
    
            var movieNameParameter = movieName != null ?
                new ObjectParameter("MovieName", movieName) :
                new ObjectParameter("MovieName", typeof(string));
    
            var uRLDetailParameter = uRLDetail != null ?
                new ObjectParameter("URLDetail", uRLDetail) :
                new ObjectParameter("URLDetail", typeof(string));
    
            var linkImageParameter = linkImage != null ?
                new ObjectParameter("LinkImage", linkImage) :
                new ObjectParameter("LinkImage", typeof(string));
    
            var directorParameter = director != null ?
                new ObjectParameter("Director", director) :
                new ObjectParameter("Director", typeof(string));
    
            var writerParameter = writer != null ?
                new ObjectParameter("Writer", writer) :
                new ObjectParameter("Writer", typeof(string));
    
            var starsParameter = stars != null ?
                new ObjectParameter("Stars", stars) :
                new ObjectParameter("Stars", typeof(string));
    
            var descriptionsParameter = descriptions != null ?
                new ObjectParameter("Descriptions", descriptions) :
                new ObjectParameter("Descriptions", typeof(string));
    
            var releaseDateParameter = releaseDate != null ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(string));
    
            var runningTimeParameter = runningTime != null ?
                new ObjectParameter("RunningTime", runningTime) :
                new ObjectParameter("RunningTime", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var newParameter = @new != null ?
                new ObjectParameter("New", @new) :
                new ObjectParameter("New", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prd_Movie_Insert", movieIDParameter, movieNameParameter, uRLDetailParameter, linkImageParameter, directorParameter, writerParameter, starsParameter, descriptionsParameter, releaseDateParameter, runningTimeParameter, categoryIDParameter, newParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prd_Movie_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prd_Movie_SelectAll");
        }
    
        public virtual ObjectResult<prd_MovieList_All_Result> prd_MovieList_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prd_MovieList_All_Result>("prd_MovieList_All");
        }
    
        public virtual int prd_MovieSuggest_Insert(string s)
        {
            var sParameter = s != null ?
                new ObjectParameter("S", s) :
                new ObjectParameter("S", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prd_MovieSuggest_Insert", sParameter);
        }
    
        public virtual ObjectResult<string> prd_Table1_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prd_Table1_Select");
        }
    
        public virtual ObjectResult<Nullable<bool>> prd_ThanhVienLogin(string hoTen, string passWords)
        {
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var passWordsParameter = passWords != null ?
                new ObjectParameter("PassWords", passWords) :
                new ObjectParameter("PassWords", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("prd_ThanhVienLogin", hoTenParameter, passWordsParameter);
        }
    }
}
